alphabet:
	num, +, x, =
note:
	num is a type which the lexer creates from
	the following rules:
	E => SE | 0
	(where S is the successor function)

context-free grammar

P => Q=Q | Q
Q => Q+R | R
R => RxF | F
F => num | (Q)

todo:
<> implement S as a separate type from num
(currently the lexer condenses applications of S into a single number token)
<> augment grammar to include logical operators
